// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using test_identityBHSC.Models;

#nullable disable

namespace QuanLySuaChua_BaoHanh.Migrations
{
    [DbContext(typeof(BHSC_DbContext))]
    [Migration("20250502161116_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("test_identityBHSC.Models.ChiTietPn", b =>
                {
                    b.Property<int>("PhieuNhapId")
                        .HasColumnType("int")
                        .HasColumnName("PhieuNhapID");

                    b.Property<int>("LinhKienId")
                        .HasColumnType("int")
                        .HasColumnName("LinhKienID");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("PhieuNhapId", "LinhKienId")
                        .HasName("PK__ChiTietP__CE785146FEE0EA2E");

                    b.HasIndex("LinhKienId");

                    b.ToTable("ChiTietPN");
                });

            modelBuilder.Entity("test_identityBHSC.Models.ChiTietPx", b =>
                {
                    b.Property<int>("PhieuXuatId")
                        .HasColumnType("int")
                        .HasColumnName("PhieuXuatID");

                    b.Property<int>("PhieuSuaChuaId")
                        .HasColumnType("int")
                        .HasColumnName("PhieuSuaChuaID");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("PhieuXuatId", "PhieuSuaChuaId")
                        .HasName("PK__ChiTietP__5169BB2B3005A347");

                    b.HasIndex("PhieuSuaChuaId");

                    b.ToTable("ChiTietPX");
                });

            modelBuilder.Entity("test_identityBHSC.Models.ChiTietSuaChua", b =>
                {
                    b.Property<int>("ChiTietId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ChiTietID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChiTietId"));

                    b.Property<string>("DanhGiaKyThuat")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("LinhKienId")
                        .HasColumnType("int")
                        .HasColumnName("LinhKienID");

                    b.Property<string>("LoaiDon")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("MoTaKhachHang")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("PhieuSuaChuaId")
                        .HasColumnType("int")
                        .HasColumnName("PhieuSuaChuaID");

                    b.Property<int>("SanPhamId")
                        .HasColumnType("int")
                        .HasColumnName("SanPhamID");

                    b.Property<int>("SoLuongLinhKien")
                        .HasColumnType("int");

                    b.HasKey("ChiTietId")
                        .HasName("PK__ChiTietS__B117E9EAF0334BA5");

                    b.HasIndex("LinhKienId");

                    b.HasIndex("PhieuSuaChuaId");

                    b.HasIndex("SanPhamId");

                    b.ToTable("ChiTietSuaChua");
                });

            modelBuilder.Entity("test_identityBHSC.Models.DanhMuc", b =>
                {
                    b.Property<int>("DanhMucId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DanhMucID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DanhMucId"));

                    b.Property<string>("PhanLoai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TenDanhMuc")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("DanhMucId")
                        .HasName("PK__DanhMuc__1C53BA7B3EE29315");

                    b.ToTable("DanhMuc");
                });

            modelBuilder.Entity("test_identityBHSC.Models.LinhKien", b =>
                {
                    b.Property<int>("LinhKienId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LinhKienID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LinhKienId"));

                    b.Property<int?>("DanhMucId")
                        .HasColumnType("int")
                        .HasColumnName("DanhMucID");

                    b.Property<decimal>("DonGia")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PhamViSuDung")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("SoLuongTon")
                        .HasColumnType("int");

                    b.Property<string>("TenLinhKien")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("LinhKienId")
                        .HasName("PK__LinhKien__04269C40A0329C9C");

                    b.HasIndex("DanhMucId");

                    b.ToTable("LinhKien");
                });

            modelBuilder.Entity("test_identityBHSC.Models.NguoiDung", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("NguoiDungID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("DiaChi");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("Email");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("HoTen")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("HoTen");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("MatKhau");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Sdt");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("PhuongId")
                        .HasColumnType("int")
                        .HasColumnName("PhuongID");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("TaiKhoan");

                    b.Property<string>("VaiTro")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("VaiTro");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("PhuongId");

                    b.HasIndex(new[] { "UserName" }, "UQ__NguoiDun__D5B8C7F043064735")
                        .IsUnique();

                    b.ToTable("NguoiDung", (string)null);
                });

            modelBuilder.Entity("test_identityBHSC.Models.PhieuNhap", b =>
                {
                    b.Property<int>("PhieuNhapId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PhieuNhapID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PhieuNhapId"));

                    b.Property<string>("GhiChu")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("KhoId")
                        .HasColumnType("int")
                        .HasColumnName("KhoID");

                    b.Property<DateTime>("NgayNhap")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)");

                    b.Property<decimal?>("TongTien")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<string>("TrangThai")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("PhieuNhapId")
                        .HasName("PK__PhieuNha__DE3A3882C1EFE80A");

                    b.HasIndex("KhoId");

                    b.ToTable("PhieuNhap");
                });

            modelBuilder.Entity("test_identityBHSC.Models.PhieuSuaChua", b =>
                {
                    b.Property<int>("PhieuSuaChuaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PhieuSuaChuaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PhieuSuaChuaId"));

                    b.Property<string>("DiaChiNhanTraSanPham")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("KhachHangId")
                        .HasColumnType("int")
                        .HasColumnName("KhachHangID");

                    b.Property<double?>("KhoangCach")
                        .HasColumnType("float");

                    b.Property<int?>("KyThuatId")
                        .HasColumnType("int")
                        .HasColumnName("KyThuatID");

                    b.Property<string>("MoTaKhachHang")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("NgayGui")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("NgayHen")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)");

                    b.Property<DateTime?>("NgayThanhToan")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)");

                    b.Property<DateTime?>("NgayTra")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)");

                    b.Property<decimal?>("PhiVanChuyen")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<int>("PhuongId")
                        .HasColumnType("int")
                        .HasColumnName("PhuongID");

                    b.Property<string>("PhuongThucThanhToan")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("TongTien")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<string>("TrangThai")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("PhieuSuaChuaId")
                        .HasName("PK__PhieuSua__B46641E6385CDB55");

                    b.HasIndex("KhachHangId");

                    b.HasIndex("KyThuatId");

                    b.HasIndex("PhuongId");

                    b.ToTable("PhieuSuaChua");
                });

            modelBuilder.Entity("test_identityBHSC.Models.PhieuXuat", b =>
                {
                    b.Property<int>("PhieuXuatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PhieuXuatID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PhieuXuatId"));

                    b.Property<string>("GhiChu")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("KhoId")
                        .HasColumnType("int")
                        .HasColumnName("KhoID");

                    b.Property<DateTime>("NgayXuat")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)");

                    b.Property<decimal?>("TongTien")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<string>("TrangThai")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("PhieuXuatId")
                        .HasName("PK__PhieuXua__2A2FDF35F3666748");

                    b.HasIndex("KhoId");

                    b.ToTable("PhieuXuat");
                });

            modelBuilder.Entity("test_identityBHSC.Models.Phuong", b =>
                {
                    b.Property<int>("PhuongId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PhuongID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PhuongId"));

                    b.Property<int>("QuanId")
                        .HasColumnType("int")
                        .HasColumnName("QuanID");

                    b.Property<string>("TenPhuong")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PhuongId")
                        .HasName("PK__Phuong__7FC46F50B400BD51");

                    b.HasIndex("QuanId");

                    b.ToTable("Phuong");
                });

            modelBuilder.Entity("test_identityBHSC.Models.Quan", b =>
                {
                    b.Property<int>("QuanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("QuanID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuanId"));

                    b.Property<string>("TenQuan")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ThanhPhoId")
                        .HasColumnType("int")
                        .HasColumnName("ThanhPhoID");

                    b.HasKey("QuanId")
                        .HasName("PK__Quan__B0ADAE910FF0D4CB");

                    b.HasIndex("ThanhPhoId");

                    b.ToTable("Quan");
                });

            modelBuilder.Entity("test_identityBHSC.Models.SanPham", b =>
                {
                    b.Property<int>("SanPhamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SanPhamID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SanPhamId"));

                    b.Property<int>("DanhMucId")
                        .HasColumnType("int")
                        .HasColumnName("DanhMucID");

                    b.Property<int>("KhachHangId")
                        .HasColumnType("int")
                        .HasColumnName("KhachHangID");

                    b.Property<string>("MaBh")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("MaBH");

                    b.Property<string>("MoTa")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateOnly>("NgayHetHanBh")
                        .HasColumnType("date")
                        .HasColumnName("NgayHetHanBH");

                    b.Property<DateOnly>("NgayMua")
                        .HasColumnType("date");

                    b.Property<string>("TenSanPham")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("ThoiGianBaoHanh")
                        .HasColumnType("int");

                    b.HasKey("SanPhamId")
                        .HasName("PK__SanPham__05180FF4A990F499");

                    b.HasIndex("DanhMucId");

                    b.HasIndex("KhachHangId");

                    b.ToTable("SanPham");
                });

            modelBuilder.Entity("test_identityBHSC.Models.ThanhPho", b =>
                {
                    b.Property<int>("ThanhPhoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ThanhPhoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ThanhPhoId"));

                    b.Property<string>("TenThanhPho")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ThanhPhoId")
                        .HasName("PK__ThanhPho__6E7123A00A09EC48");

                    b.ToTable("ThanhPho");
                });

            modelBuilder.Entity("test_identityBHSC.Models.ThongBao", b =>
                {
                    b.Property<int>("ThongBaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ThongBaoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ThongBaoId"));

                    b.Property<DateTime>("NgayTao")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)");

                    b.Property<int>("NguoiDungId")
                        .HasColumnType("int")
                        .HasColumnName("NguoiDungID");

                    b.Property<string>("NoiDung")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("TieuDe")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TrangThai")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasDefaultValue("ChuaDoc");

                    b.HasKey("ThongBaoId")
                        .HasName("PK__ThongBao__6E51A53BDBDCBFB7");

                    b.HasIndex("NguoiDungId");

                    b.ToTable("ThongBao");
                });

            modelBuilder.Entity("test_identityBHSC.Models.TinNhan", b =>
                {
                    b.Property<int>("TinNhanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TinNhanID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TinNhanId"));

                    b.Property<int>("NguoiGuiId")
                        .HasColumnType("int")
                        .HasColumnName("NguoiGuiID");

                    b.Property<int>("NguoiNhanId")
                        .HasColumnType("int")
                        .HasColumnName("NguoiNhanID");

                    b.Property<string>("NoiDung")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime>("ThoiGianGui")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("TrangThai")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("TinNhanId")
                        .HasName("PK__TinNhan__40CE177CC404C147");

                    b.HasIndex("NguoiGuiId");

                    b.HasIndex("NguoiNhanId");

                    b.ToTable("TinNhan");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("test_identityBHSC.Models.NguoiDung", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("test_identityBHSC.Models.NguoiDung", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("test_identityBHSC.Models.NguoiDung", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("test_identityBHSC.Models.NguoiDung", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("test_identityBHSC.Models.ChiTietPn", b =>
                {
                    b.HasOne("test_identityBHSC.Models.LinhKien", "LinhKien")
                        .WithMany("ChiTietPns")
                        .HasForeignKey("LinhKienId")
                        .IsRequired()
                        .HasConstraintName("FK__ChiTietPN__LinhK__6B24EA82");

                    b.HasOne("test_identityBHSC.Models.PhieuNhap", "PhieuNhap")
                        .WithMany("ChiTietPns")
                        .HasForeignKey("PhieuNhapId")
                        .IsRequired()
                        .HasConstraintName("FK__ChiTietPN__Phieu__6A30C649");

                    b.Navigation("LinhKien");

                    b.Navigation("PhieuNhap");
                });

            modelBuilder.Entity("test_identityBHSC.Models.ChiTietPx", b =>
                {
                    b.HasOne("test_identityBHSC.Models.PhieuSuaChua", "PhieuSuaChua")
                        .WithMany("ChiTietPxes")
                        .HasForeignKey("PhieuSuaChuaId")
                        .IsRequired()
                        .HasConstraintName("FK__ChiTietPX__Phieu__6754599E");

                    b.HasOne("test_identityBHSC.Models.PhieuXuat", "PhieuXuat")
                        .WithMany("ChiTietPxes")
                        .HasForeignKey("PhieuXuatId")
                        .IsRequired()
                        .HasConstraintName("FK__ChiTietPX__Phieu__66603565");

                    b.Navigation("PhieuSuaChua");

                    b.Navigation("PhieuXuat");
                });

            modelBuilder.Entity("test_identityBHSC.Models.ChiTietSuaChua", b =>
                {
                    b.HasOne("test_identityBHSC.Models.LinhKien", "LinhKien")
                        .WithMany("ChiTietSuaChuas")
                        .HasForeignKey("LinhKienId")
                        .IsRequired()
                        .HasConstraintName("FK__ChiTietSu__LinhK__70DDC3D8");

                    b.HasOne("test_identityBHSC.Models.PhieuSuaChua", "PhieuSuaChua")
                        .WithMany("ChiTietSuaChuas")
                        .HasForeignKey("PhieuSuaChuaId")
                        .IsRequired()
                        .HasConstraintName("FK__ChiTietSu__Phieu__6FE99F9F");

                    b.HasOne("test_identityBHSC.Models.SanPham", "SanPham")
                        .WithMany("ChiTietSuaChuas")
                        .HasForeignKey("SanPhamId")
                        .IsRequired()
                        .HasConstraintName("FK__ChiTietSu__SanPh__6EF57B66");

                    b.Navigation("LinhKien");

                    b.Navigation("PhieuSuaChua");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("test_identityBHSC.Models.LinhKien", b =>
                {
                    b.HasOne("test_identityBHSC.Models.DanhMuc", "DanhMuc")
                        .WithMany("LinhKiens")
                        .HasForeignKey("DanhMucId")
                        .HasConstraintName("FK__LinhKien__DanhMu__47DBAE45");

                    b.Navigation("DanhMuc");
                });

            modelBuilder.Entity("test_identityBHSC.Models.NguoiDung", b =>
                {
                    b.HasOne("test_identityBHSC.Models.Phuong", "Phuong")
                        .WithMany("NguoiDungs")
                        .HasForeignKey("PhuongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Phuong");
                });

            modelBuilder.Entity("test_identityBHSC.Models.PhieuNhap", b =>
                {
                    b.HasOne("test_identityBHSC.Models.NguoiDung", "Kho")
                        .WithMany("PhieuNhaps")
                        .HasForeignKey("KhoId")
                        .IsRequired()
                        .HasConstraintName("FK__PhieuNhap__KhoID__5AEE82B9");

                    b.Navigation("Kho");
                });

            modelBuilder.Entity("test_identityBHSC.Models.PhieuSuaChua", b =>
                {
                    b.HasOne("test_identityBHSC.Models.NguoiDung", "KhachHang")
                        .WithMany("PhieuSuaChuaKhachHangs")
                        .HasForeignKey("KhachHangId")
                        .IsRequired()
                        .HasConstraintName("FK__PhieuSuaC__Khach__5070F446");

                    b.HasOne("test_identityBHSC.Models.NguoiDung", "KyThuat")
                        .WithMany("PhieuSuaChuaKyThuats")
                        .HasForeignKey("KyThuatId")
                        .HasConstraintName("FK__PhieuSuaC__KyThu__5165187F");

                    b.HasOne("test_identityBHSC.Models.Phuong", "Phuong")
                        .WithMany("PhieuSuaChuas")
                        .HasForeignKey("PhuongId")
                        .IsRequired()
                        .HasConstraintName("FK__PhieuSuaC__Phuon__52593CB8");

                    b.Navigation("KhachHang");

                    b.Navigation("KyThuat");

                    b.Navigation("Phuong");
                });

            modelBuilder.Entity("test_identityBHSC.Models.PhieuXuat", b =>
                {
                    b.HasOne("test_identityBHSC.Models.NguoiDung", "Kho")
                        .WithMany("PhieuXuats")
                        .HasForeignKey("KhoId")
                        .IsRequired()
                        .HasConstraintName("FK__PhieuXuat__KhoID__6383C8BA");

                    b.Navigation("Kho");
                });

            modelBuilder.Entity("test_identityBHSC.Models.Phuong", b =>
                {
                    b.HasOne("test_identityBHSC.Models.Quan", "Quan")
                        .WithMany("Phuongs")
                        .HasForeignKey("QuanId")
                        .IsRequired()
                        .HasConstraintName("FK__Phuong__QuanID__403A8C7D");

                    b.Navigation("Quan");
                });

            modelBuilder.Entity("test_identityBHSC.Models.Quan", b =>
                {
                    b.HasOne("test_identityBHSC.Models.ThanhPho", "ThanhPho")
                        .WithMany("Quans")
                        .HasForeignKey("ThanhPhoId")
                        .IsRequired()
                        .HasConstraintName("FK__Quan__ThanhPhoID__3D5E1FD2");

                    b.Navigation("ThanhPho");
                });

            modelBuilder.Entity("test_identityBHSC.Models.SanPham", b =>
                {
                    b.HasOne("test_identityBHSC.Models.DanhMuc", "DanhMuc")
                        .WithMany("SanPhams")
                        .HasForeignKey("DanhMucId")
                        .IsRequired()
                        .HasConstraintName("FK__SanPham__DanhMuc__4BAC3F29");

                    b.HasOne("test_identityBHSC.Models.NguoiDung", "KhachHang")
                        .WithMany("SanPhams")
                        .HasForeignKey("KhachHangId")
                        .IsRequired()
                        .HasConstraintName("FK__SanPham__KhachHa__4AB81AF0");

                    b.Navigation("DanhMuc");

                    b.Navigation("KhachHang");
                });

            modelBuilder.Entity("test_identityBHSC.Models.ThongBao", b =>
                {
                    b.HasOne("test_identityBHSC.Models.NguoiDung", "NguoiDung")
                        .WithMany("ThongBaos")
                        .HasForeignKey("NguoiDungId")
                        .IsRequired()
                        .HasConstraintName("FK__ThongBao__NguoiD__571DF1D5");

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("test_identityBHSC.Models.TinNhan", b =>
                {
                    b.HasOne("test_identityBHSC.Models.NguoiDung", "NguoiGui")
                        .WithMany("TinNhanNguoiGuis")
                        .HasForeignKey("NguoiGuiId")
                        .IsRequired()
                        .HasConstraintName("FK__TinNhan__NguoiGu__5EBF139D");

                    b.HasOne("test_identityBHSC.Models.NguoiDung", "NguoiNhan")
                        .WithMany("TinNhanNguoiNhans")
                        .HasForeignKey("NguoiNhanId")
                        .IsRequired()
                        .HasConstraintName("FK__TinNhan__NguoiNh__5FB337D6");

                    b.Navigation("NguoiGui");

                    b.Navigation("NguoiNhan");
                });

            modelBuilder.Entity("test_identityBHSC.Models.DanhMuc", b =>
                {
                    b.Navigation("LinhKiens");

                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("test_identityBHSC.Models.LinhKien", b =>
                {
                    b.Navigation("ChiTietPns");

                    b.Navigation("ChiTietSuaChuas");
                });

            modelBuilder.Entity("test_identityBHSC.Models.NguoiDung", b =>
                {
                    b.Navigation("PhieuNhaps");

                    b.Navigation("PhieuSuaChuaKhachHangs");

                    b.Navigation("PhieuSuaChuaKyThuats");

                    b.Navigation("PhieuXuats");

                    b.Navigation("SanPhams");

                    b.Navigation("ThongBaos");

                    b.Navigation("TinNhanNguoiGuis");

                    b.Navigation("TinNhanNguoiNhans");
                });

            modelBuilder.Entity("test_identityBHSC.Models.PhieuNhap", b =>
                {
                    b.Navigation("ChiTietPns");
                });

            modelBuilder.Entity("test_identityBHSC.Models.PhieuSuaChua", b =>
                {
                    b.Navigation("ChiTietPxes");

                    b.Navigation("ChiTietSuaChuas");
                });

            modelBuilder.Entity("test_identityBHSC.Models.PhieuXuat", b =>
                {
                    b.Navigation("ChiTietPxes");
                });

            modelBuilder.Entity("test_identityBHSC.Models.Phuong", b =>
                {
                    b.Navigation("NguoiDungs");

                    b.Navigation("PhieuSuaChuas");
                });

            modelBuilder.Entity("test_identityBHSC.Models.Quan", b =>
                {
                    b.Navigation("Phuongs");
                });

            modelBuilder.Entity("test_identityBHSC.Models.SanPham", b =>
                {
                    b.Navigation("ChiTietSuaChuas");
                });

            modelBuilder.Entity("test_identityBHSC.Models.ThanhPho", b =>
                {
                    b.Navigation("Quans");
                });
#pragma warning restore 612, 618
        }
    }
}
